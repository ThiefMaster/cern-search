apiVersion: v1
kind: Template
metadata:
  name: cern-search-rest
  annotations:
    descriptino: "CERN Search RESTful API and necessary services OpenShift Template"
labels:
  template: "cern-search-rest"

objects:

##############################
##### DEPLOYMENT CONFIGS #####
##############################

### CERN Search RESTful API
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: cern-search-api
    name: cern-search-api
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: cern-search-api
      deploymentconfig: cern-search-api
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: cern-search-api
          deploymentconfig: cern-search-api
      spec:
        containers:
        - command:
            - /bin/sh
            - '-c'
            - /code/scripts/manage-user.sh && gunicorn -b :5000 cern_search_rest.wsgi
          envFrom:
            - configMapRef:
                name: env-configmap
          env:
            - name: INVENIO_SEARCH_ELASTIC_HOSTS
              valueFrom:
                secretKeyRef:
                  name: es
                  key: es_credentials
            - name: INVENIO_SQLALCHEMY_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: srchdb
                  key: dburi
            - name: INVENIO_CERN_APP_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: oauth
                  key: oauth_credentials
          image: gitlab-registry.cern.ch/ppanero/cern_search_rest:latest
          imagePullPolicy: Always
          name: cern-search-api
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - init-cern-search
        - cern-search-api
        from:
          kind: ImageStreamTag
          name: cern-search-api:latest
          namespace: test-cern-search
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0

### Redis Server
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: redis
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: redis
      spec:
        containers:
        - name: redis
          image: redis
          ports:
          - containerPort: 5432
            name: tcp
          volumeMounts:
            - name: data
              mountPath: /data
        volumes:
          - name: data
            emptyDir: {}


##############################
########## SERVICES ##########
##############################
# Service for the RESTful API
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: cern-search-api
    name: cern-search-api
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: cern-search-api
      deploymentconfig: cern-search-api
    sessionAffinity: None
    type: LoadBalancer
# Service for the Redis server
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: redis
    name: redis
  spec:
    ports:
    - name: 6379-tcp
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis
      deploymentconfig: redis
    sessionAffinity: None
    type: ClusterIP

##############################
########### ROUTES ###########
##############################
- kind: Route
  apiVersion: v1
  metadata:
    labels:
      app: cern-search-api
    name: cern-search-api
  spec:
    port:
      targetPort: 5000-tcp
    to:
      kind: Service
      name: cern-search-api
      weight: 100

# TODO: Delete when automated in OpenShift/GitLab CI
##############################
######## IMAGE STREAM ########
##############################
- kind: ImageStream
  apiVersion: v1
  metadata:
   labels:
     app: cern-search-api
   name: cern-search-api
  spec:
   dockerImageRepository: gitlab-registry.cern.ch/ppanero/cern_search_rest

##############################
######### CONFIG MAP #########
##############################

- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: env-configmap
  data:
    # Invenio
    INVENIO_INSTANCE_PATH: ${APP_INSTANCE_PATH}
    # Redis
    INVENIO_CACHE_REDIS_HOST: 'redis'
    INVENIO_CACHE_REDIS_URL: 'redis://redis:6379/0'

parameters:
  - name: APP_INSTANCE_PATH
    description: "Invenio instance path for CERN Search application."
    required: true